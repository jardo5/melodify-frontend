name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build the Angular app
        run: npm run build --prod

      - name: Configure AWS Credentials Action for GitHub Actions
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Amazon ECR "Login" Action for GitHub Actions
        uses: aws-actions/amazon-ecr-login@v2.0.1     
        with:
          mask-password: 'true'

      - name: Set IMAGE_TAG
        id: tag
        run: echo "IMAGE_TAG=${{ github.sha }}-$(date +%s)" | tee -a $GITHUB_ENV

      - name: Build and tag Docker image
        run: |
          docker build -t "melodify-frontend:${IMAGE_TAG}" .
          docker tag "melodify-frontend:${IMAGE_TAG}" "${{ secrets.ECR_REPOSITORY_URI }}:${IMAGE_TAG}"

      - name: Push Docker image to Amazon ECR
        run: docker push "${{ secrets.ECR_REPOSITORY_URI }}:${IMAGE_TAG}"

      - name: Update ECS service to use the new image
        run: |
          # Fetch the current task definition for melodify-frontend-service
          ecs_task_definition=$(aws ecs describe-task-definition --task-definition melodify-frontend-task)
          
          # Update the image in the task definition to the new image
          new_task_definition=$(echo $ecs_task_definition | jq --arg IMAGE_TAG "${IMAGE_TAG}" \
            '.taskDefinition | .containerDefinitions[0].image="'${{ secrets.ECR_REPOSITORY_URI }}:${IMAGE_TAG}'"')
          
          # Clean up unnecessary fields in the new task definition
          new_task_definition=$(echo $new_task_definition | jq 'del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .compatibilities)')
          
          # Register the new task definition
          aws ecs register-task-definition --cli-input-json "$new_task_definition"
          
          # Get the new revision of the task definition
          new_revision=$(aws ecs describe-task-definition --task-definition melodify-frontend-task | jq -r '.taskDefinition.taskDefinitionArn')
          
          # Update the ECS service to use the new task definition revision
          aws ecs update-service --cluster melodify --service melodify-frontend-service --task-definition $new_revision --force-new-deployment
